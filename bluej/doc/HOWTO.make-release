How to make a BlueJ release
---------------------------

PART I - BEFORE BUILDING
------------------------

 0. Before building, check the copyright years (for display in the copyright dialog), in the
    showCopyright() method in PkgMgrFrame.

 1. Set the right BlueJ version number in bluej/build.xml.
    Add a GUID to package/winsetup/version-guid file (Get one at guidgen.com).
    Run: ant update-version-number
        - This updates the version number in the Boot class and the README.TXT file.

 2. Tag the current source tree in version control.


PART II - BUILDING BLUEJ RELEASE CANDIDATE
------------------------------------------

NOTE:
    For the following "ant" commands, a release candidate suffix can be specified via
    -Dbluej.rcsuffix on the command line. For example:
    
       ant debian -Dbluej.rcsuffix=-rc3
    
    The above will append "-rc3" to the base filenames generated in the package directory,
    generating "BlueJ-linux-4.1.3-rc3.deb" for example.

 3. For Debian, run "fakeroot ant debian".
    (You will need fakeroot installed: sudo apt-get install fakeroot)
    
    It is possible to build as root instead, though this is not recommended. Root is necessary so
    that files in the deb package are correctly owned as the root user when the package is
    installed. 

 4. See HOWTO.make-win-version for details on the Windows release bundle.
    Short version: run "ant windows"
 
 5. See HOWTO.make-mac-release for details on the Mac release bundles.
    Short version: run "ant mac"

 6. Test. When okay, upload to server.

 7. Run "ant urls-rc" to check the RCs are in place and get a print-out of the URLs.  Include this
    in RC announcement email.
 

PART III - RELEASING BLUEJ
--------------------------

 8. Make sure the release is correctly tagged in version control

 9. Move the RCs and the source to the public
    server (currently www.bluej.org/download/files/).

10. Run "ant urls-final" to check the files are in place

11. Update the BlueJ web site to announce the new version:
     - update the front page (index.html)
        - change version, date, and download links 
     - update the versions page (versions.html)
        - add section with version, date, changes and download links
     - update the current version information (version.info)
        - change the version number and the release notes' summary.
       
12. In the bugs database (http://bugs.bluej.org/trac/bluej),

   1. Add a future release milestone ("Roadmap", "New Milestone").

   2. Mark the new release milestone as completed.  Use the option that
      Trac provides to retarget open bugs to the future milestone.
      ("Roadmap" -> click on milestone -> "Edit milestone";
       do not go through the Admin panel!).
   
   3. Also check that there are no bugs against the current release which are marked as
      FIXED but for which the milestone isn't set. Set the milestone to the new release
      for such bugs.
   
13. Also in the bugs database, add the new version so that bugs can be reported against
    it.
    
14. Update the support form at https://www.bluej.org/support.html - the drop-down
    version field should have the new version added as an option.

15. Send a mail message to bluej-announce@bluej.org, announcing the release.

16. More public announcements. See HOWTO.announce-release.

